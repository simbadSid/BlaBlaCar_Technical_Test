<project name="BlaBlaCar_Technical"
         default="distribute" basedir=".">
    <description>
           Ant script to build the project
    </description>


    <!-- Set global properties for this build -->
    <property name="projectName"    value="BlaBlaCar_Technical" />
    <property name="dir.src"        location="src" />
    <property name="dir.build"      location="out" />
    <property name="dir.dist"       location="dist" />
    <property name="dir.doc"        location="doc" />
    <property name="mainClass"      value="main/java/Main" />
    <property name="lib.junit"      value="lib/junit-4.10.jar" />
    <property name="version"        value="1.0" />


    <!-- Init the binary directories -->
    <target     name="init"
                description="Create the binary directories">
        <!-- Create the time stamp -->
        <tstamp />
        <mkdir dir="${dir.build}" />
        <mkdir dir="${dir.dist}" />
    </target>


    <!-- Compile each java file -->
    <target     name="compile"
                depends="init"
                description="Compile the java sources">
        <javac srcdir="${dir.src}" destdir="${dir.build}" />
    </target>


    <!-- Generate an executable jar -->
    <target     name="distribute"
                depends="compile"
                description="Generate the distribution">
        <mkdir dir="${dir.dist}/lib" />

        <jar destfile="${dir.dist}/lib/${projectName}-${version}.jar" basedir="${dir.build}">
                <manifest>
                        <attribute name="Main-Class" value="${mainClass}" />
                </manifest>
        </jar>
    </target>

    <target name="test" depends="compile">
        <junit>
            <classpath>
                <pathelement location="${dir.build}" />
                <pathelement location="${lib.junit}"/>
            </classpath>
            <batchtest>
                <fileset dir="${dir.build}">
                    <include name="**/*Test*" />
                </fileset>
            </batchtest>
            <formatter type="brief" usefile="false"/>
        </junit>
    </target>

    <!-- Generate javadocs for current project into ${dir.dir.doc} -->
    <target     name="doc"
                depends="init"
                description="Generate Java documentation">
        <javadoc sourcepath="${dir.src}" destdir="${dir.doc}"/>
    </target>

    <!-- Clean all the binary directories -->
    <target     name="clean"
                description="Clean up all the binary directories">
        <delete dir="${dir.build}" />
        <delete dir="${dir.dist}" />
        <delete dir="${dir.doc}" />
    </target>

</project>
